/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.79
 * Generated at: 2017-10-09 00:09:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.configuration;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.jboss.dashboard.workspace.Parameters;
import org.jboss.dashboard.LocaleManager;

public final class show_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/configuration/show.noDOJO.jsp", Long.valueOf(1460669778000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmvc_005fformatter_0026_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmvc_005ffragment_0026_005fname;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fstatic_005fimage_0026_005frelativePath_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fmvc_005fformatter_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fmvc_005ffragment_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fstatic_005fimage_0026_005frelativePath_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody.release();
    _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody.release();
    _005fjspx_005ftagPool_005fmvc_005fformatter_0026_005fname.release();
    _005fjspx_005ftagPool_005fmvc_005ffragment_0026_005fname.release();
    _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey_005fnobody.release();
    _005fjspx_005ftagPool_005fstatic_005fimage_0026_005frelativePath_005fnobody.release();
    _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.release();
    _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;

    java.lang.Object _jspx_ajaxCompatible_1 = null;
    java.lang.Object _jspx_icon_Node_2 = null;
    java.lang.Object _jspx_iconNodePath_3 = null;
    java.lang.Object _jspx_name_Node_4 = null;
    java.lang.Object _jspx_value_5 = null;

    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    String preffix = request.getContextPath();
    while (preffix.endsWith("/")) preffix = preffix.substring(preffix.length() - 1);

      out.write('\n');
      //  i18n:bundle
      org.jboss.dashboard.ui.taglib.BundleTag _jspx_th_i18n_005fbundle_005f0 = (org.jboss.dashboard.ui.taglib.BundleTag) _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody.get(org.jboss.dashboard.ui.taglib.BundleTag.class);
      boolean _jspx_th_i18n_005fbundle_005f0_reused = false;
      try {
        _jspx_th_i18n_005fbundle_005f0.setPageContext(_jspx_page_context);
        _jspx_th_i18n_005fbundle_005f0.setParent(null);
        // /configuration/show.noDOJO.jsp(30,0) name = baseName type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_i18n_005fbundle_005f0.setBaseName("org.jboss.dashboard.ui.messages");
        // /configuration/show.noDOJO.jsp(30,0) name = locale type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_i18n_005fbundle_005f0.setLocale(LocaleManager.currentLocale());
        int _jspx_eval_i18n_005fbundle_005f0 = _jspx_th_i18n_005fbundle_005f0.doStartTag();
        if (_jspx_th_i18n_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fi18n_005fbundle_0026_005flocale_005fbaseName_005fnobody.reuse(_jspx_th_i18n_005fbundle_005f0);
        _jspx_th_i18n_005fbundle_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_i18n_005fbundle_005f0, _jsp_getInstanceManager(), _jspx_th_i18n_005fbundle_005f0_reused);
      }
      out.write("\n");
      out.write("\n");
      out.write("<link rel=\"StyleSheet\" media=\"screen\" type=\"text/css\"\n");
      out.write("      href=\"");
      if (_jspx_meth_mvc_005fcontext_005f0(_jspx_page_context))
        return;
      out.write("\">\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/components/modalDialogComponent/show.jsp", out, false);
      out.write('\n');
      //  mvc:formatter
      org.jboss.dashboard.ui.taglib.formatter.FormatterTag _jspx_th_mvc_005fformatter_005f0 = (org.jboss.dashboard.ui.taglib.formatter.FormatterTag) _005fjspx_005ftagPool_005fmvc_005fformatter_0026_005fname.get(org.jboss.dashboard.ui.taglib.formatter.FormatterTag.class);
      boolean _jspx_th_mvc_005fformatter_005f0_reused = false;
      try {
        _jspx_th_mvc_005fformatter_005f0.setPageContext(_jspx_page_context);
        _jspx_th_mvc_005fformatter_005f0.setParent(null);
        // /configuration/show.noDOJO.jsp(36,0) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_mvc_005fformatter_005f0.setName("org.jboss.dashboard.ui.config.formatters.ConfigurationPageFormatter");
        int _jspx_eval_mvc_005fformatter_005f0 = _jspx_th_mvc_005fformatter_005f0.doStartTag();
        if (_jspx_eval_mvc_005fformatter_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_mvc_005fformatter_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_mvc_005fformatter_005f0);
          }
          do {
            out.write('\n');
            //  mvc:fragment
            org.jboss.dashboard.ui.taglib.formatter.FragmentTag _jspx_th_mvc_005ffragment_005f0 = (org.jboss.dashboard.ui.taglib.formatter.FragmentTag) _005fjspx_005ftagPool_005fmvc_005ffragment_0026_005fname.get(org.jboss.dashboard.ui.taglib.formatter.FragmentTag.class);
            boolean _jspx_th_mvc_005ffragment_005f0_reused = false;
            try {
              _jspx_th_mvc_005ffragment_005f0.setPageContext(_jspx_page_context);
              _jspx_th_mvc_005ffragment_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005fformatter_005f0);
              // /configuration/show.noDOJO.jsp(37,0) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_mvc_005ffragment_005f0.setName("output");
              int _jspx_eval_mvc_005ffragment_005f0 = _jspx_th_mvc_005ffragment_005f0.doStartTag();
              if (_jspx_eval_mvc_005ffragment_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_mvc_005ffragment_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_mvc_005ffragment_005f0);
                }
                do {
                  out.write("\n");
                  out.write("    <table id=\"administrationMenuTable\">\n");
                  out.write("        <tr>\n");
                  out.write("            <td>\n");
                  out.write("                <div align=\"left\" parseWidgets=\"false\"><a href=\"index.jsp\">\n");
                  out.write("                    <img border=\"0\" title=\"");
                  if (_jspx_meth_i18n_005fmessage_005f0(_jspx_th_mvc_005ffragment_005f0, _jspx_page_context))
                    return;
                  out.write("\"\n");
                  out.write("                         src=\"");
                  if (_jspx_meth_static_005fimage_005f0(_jspx_th_mvc_005ffragment_005f0, _jspx_page_context))
                    return;
                  out.write("\">\n");
                  out.write("                </a></div>\n");
                  out.write("            </td>\n");
                  out.write("        </tr>\n");
                  out.write("        <tr>\n");
                  out.write("            <td class=\"shadow\"></td>\n");
                  out.write("        </tr>\n");
                  out.write("    </table>\n");
                  out.write("    <br>\n");
                  out.write("\n");
                  out.write("    <table align=\"center\" width=\"95%\" style=\"border-radius: 18px;\" class=\"skn-table_border\">\n");
                  out.write("        <tr>\n");
                  out.write("            <td style=\"padding: 15px;\">\n");
                  out.write("\n");
                  out.write("                <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" bgcolor=\"#FFFFFF\" class=\"skn-table_border\">\n");
                  out.write("                    <tr>\n");
                  out.write("                        <td id=\"myRow\" width=\"400\" height=\"700px\" valign=\"top\"\n");
                  out.write("                            class=\"skn-background_alt\">\n");
                  out.write("                            <div id=\"SomeDiv1\" width=\"100%\" style=\" overflow:-moz-scrollbars-horizontal;overflow-x:hidden;border-style:solid;border-right-width:0px;border-bottom-width:0px;border-top-width:1px;border-left-width:1px;border-color:#4f565e;\">\n");
                  out.write("                                <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n");
                  out.write("                                    <tr>\n");
                  out.write("                                        <td>");
                  org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "tree/tree.jsp", out, true);
                  out.write("</td>\n");
                  out.write("                                        <td align=\"right\"><div class=\"corner\" id=\"DragHandleSomeDiv1\" >&nbsp;</div></td>\n");
                  out.write("                                    </tr>\n");
                  out.write("                                </table>\n");
                  out.write("\n");
                  out.write("                            </div>\n");
                  out.write("\n");
                  out.write("                        </td>\n");
                  out.write("                        <td valign=\"top\">\n");
                  out.write("                            <div id=\"editPagePane\" style=\"display:block; height:700px; border-style:none; border-width:1px 0 0 1px;border-color:#4f565e; text-align: left; vertical-align: top;\">\n");
                  out.write("\n");
                  out.write("                                ");
                  //  mvc:fragmentValue
                  org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag _jspx_th_mvc_005ffragmentValue_005f0 = (org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag) _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.get(org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag.class);
                  boolean _jspx_th_mvc_005ffragmentValue_005f0_reused = false;
                  try {
                    _jspx_th_mvc_005ffragmentValue_005f0.setPageContext(_jspx_page_context);
                    _jspx_th_mvc_005ffragmentValue_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragment_005f0);
                    // /configuration/show.noDOJO.jsp(75,32) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_mvc_005ffragmentValue_005f0.setName("editPage");
                    // /configuration/show.noDOJO.jsp(75,32) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                    _jspx_th_mvc_005ffragmentValue_005f0.setId("editPage");
                    int _jspx_eval_mvc_005ffragmentValue_005f0 = _jspx_th_mvc_005ffragmentValue_005f0.doStartTag();
                    if (_jspx_eval_mvc_005ffragmentValue_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                      java.lang.Object editPage = null;
                      if (_jspx_eval_mvc_005ffragmentValue_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_mvc_005ffragmentValue_005f0);
                      }
                      editPage = (java.lang.Object) _jspx_page_context.findAttribute("editPage");
                      do {
                        out.write("\n");
                        out.write("                                    ");
                        //  mvc:fragmentValue
                        org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag _jspx_th_mvc_005ffragmentValue_005f1 = (org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag) _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.get(org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag.class);
                        boolean _jspx_th_mvc_005ffragmentValue_005f1_reused = false;
                        try {
                          _jspx_th_mvc_005ffragmentValue_005f1.setPageContext(_jspx_page_context);
                          _jspx_th_mvc_005ffragmentValue_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragmentValue_005f0);
                          // /configuration/show.noDOJO.jsp(76,36) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_mvc_005ffragmentValue_005f1.setName("ajaxCompatible");
                          // /configuration/show.noDOJO.jsp(76,36) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                          _jspx_th_mvc_005ffragmentValue_005f1.setId("ajaxCompatible");
                          int _jspx_eval_mvc_005ffragmentValue_005f1 = _jspx_th_mvc_005ffragmentValue_005f1.doStartTag();
                          if (_jspx_eval_mvc_005ffragmentValue_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                            java.lang.Object ajaxCompatible = null;
                            if (_jspx_eval_mvc_005ffragmentValue_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_mvc_005ffragmentValue_005f1);
                            }
                            ajaxCompatible = (java.lang.Object) _jspx_page_context.findAttribute("ajaxCompatible");
                            do {
                              out.write("\n");
                              out.write("                                        ");
                              //  mvc:fragmentValue
                              org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag _jspx_th_mvc_005ffragmentValue_005f2 = (org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag) _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.get(org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag.class);
                              boolean _jspx_th_mvc_005ffragmentValue_005f2_reused = false;
                              try {
                              _jspx_th_mvc_005ffragmentValue_005f2.setPageContext(_jspx_page_context);
                              _jspx_th_mvc_005ffragmentValue_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragmentValue_005f1);
                              // /configuration/show.noDOJO.jsp(77,40) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_mvc_005ffragmentValue_005f2.setName("icon_Node");
                              // /configuration/show.noDOJO.jsp(77,40) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_mvc_005ffragmentValue_005f2.setId("icon_Node");
                              int _jspx_eval_mvc_005ffragmentValue_005f2 = _jspx_th_mvc_005ffragmentValue_005f2.doStartTag();
                              if (_jspx_eval_mvc_005ffragmentValue_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                              java.lang.Object icon_Node = null;
                              if (_jspx_eval_mvc_005ffragmentValue_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_mvc_005ffragmentValue_005f2);
                              }
                              icon_Node = (java.lang.Object) _jspx_page_context.findAttribute("icon_Node");
                              do {
                              out.write("\n");
                              out.write("                                            ");
                              //  mvc:fragmentValue
                              org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag _jspx_th_mvc_005ffragmentValue_005f3 = (org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag) _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.get(org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag.class);
                              boolean _jspx_th_mvc_005ffragmentValue_005f3_reused = false;
                              try {
                              _jspx_th_mvc_005ffragmentValue_005f3.setPageContext(_jspx_page_context);
                              _jspx_th_mvc_005ffragmentValue_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragmentValue_005f2);
                              // /configuration/show.noDOJO.jsp(78,44) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_mvc_005ffragmentValue_005f3.setName("iconNodePath");
                              // /configuration/show.noDOJO.jsp(78,44) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_mvc_005ffragmentValue_005f3.setId("iconNodePath");
                              int _jspx_eval_mvc_005ffragmentValue_005f3 = _jspx_th_mvc_005ffragmentValue_005f3.doStartTag();
                              if (_jspx_eval_mvc_005ffragmentValue_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                              java.lang.Object iconNodePath = null;
                              if (_jspx_eval_mvc_005ffragmentValue_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_mvc_005ffragmentValue_005f3);
                              }
                              iconNodePath = (java.lang.Object) _jspx_page_context.findAttribute("iconNodePath");
                              do {
                              out.write("\n");
                              out.write("                                                ");
                              //  mvc:fragmentValue
                              org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag _jspx_th_mvc_005ffragmentValue_005f4 = (org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag) _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.get(org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag.class);
                              boolean _jspx_th_mvc_005ffragmentValue_005f4_reused = false;
                              try {
                              _jspx_th_mvc_005ffragmentValue_005f4.setPageContext(_jspx_page_context);
                              _jspx_th_mvc_005ffragmentValue_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragmentValue_005f3);
                              // /configuration/show.noDOJO.jsp(79,48) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_mvc_005ffragmentValue_005f4.setName("name_Node");
                              // /configuration/show.noDOJO.jsp(79,48) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_mvc_005ffragmentValue_005f4.setId("name_Node");
                              int _jspx_eval_mvc_005ffragmentValue_005f4 = _jspx_th_mvc_005ffragmentValue_005f4.doStartTag();
                              if (_jspx_eval_mvc_005ffragmentValue_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                              java.lang.Object name_Node = null;
                              if (_jspx_eval_mvc_005ffragmentValue_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_mvc_005ffragmentValue_005f4);
                              }
                              name_Node = (java.lang.Object) _jspx_page_context.findAttribute("name_Node");
                              do {
                              out.write("\n");
                              out.write("\n");
                              out.write("                                                    <table width=\"100%\" align=\"center\" border=\"0\" cellpadding=\"0\"\n");
                              out.write("                                                           cellspacing=\"0\" >\n");
                              out.write("                                                        <tr>\n");
                              out.write("                                                            <td class=\"skn-background_alt\" width=\"10\"\n");
                              out.write("                                                                style=\"padding-left:5px;\">\n");
                              out.write("                                                                ");
 if (icon_Node == null || "".equals((String) icon_Node)) {
                              out.write("\n");
                              out.write("                                                                <img src=\"");
                              if (_jspx_meth_static_005fimage_005f1(_jspx_th_mvc_005ffragmentValue_005f4, _jspx_page_context))
                              return;
                              out.write("\" height=\"18\" width=\"1\"/>\n");
                              out.write("                                                                ");
 } else { 
                              out.write("\n");
                              out.write("                                                                <img src=\"");
                              //  static:image
                              org.jboss.dashboard.ui.taglib.resource.ImageResolverTag _jspx_th_static_005fimage_005f2 = (org.jboss.dashboard.ui.taglib.resource.ImageResolverTag) _005fjspx_005ftagPool_005fstatic_005fimage_0026_005frelativePath_005fnobody.get(org.jboss.dashboard.ui.taglib.resource.ImageResolverTag.class);
                              boolean _jspx_th_static_005fimage_005f2_reused = false;
                              try {
                              _jspx_th_static_005fimage_005f2.setPageContext(_jspx_page_context);
                              _jspx_th_static_005fimage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragmentValue_005f4);
                              // /configuration/show.noDOJO.jsp(89,74) name = relativePath type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_static_005fimage_005f2.setRelativePath("general/tree/"+icon_Node);
                              int _jspx_eval_static_005fimage_005f2 = _jspx_th_static_005fimage_005f2.doStartTag();
                              if (_jspx_th_static_005fimage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                              }
                              _005fjspx_005ftagPool_005fstatic_005fimage_0026_005frelativePath_005fnobody.reuse(_jspx_th_static_005fimage_005f2);
                              _jspx_th_static_005fimage_005f2_reused = true;
                              } finally {
                              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_static_005fimage_005f2, _jsp_getInstanceManager(), _jspx_th_static_005fimage_005f2_reused);
                              }
                              out.write("\"\n");
                              out.write("                                                                     title=\"");
                              out.print( (String) name_Node );
                              out.write("\" border=\"0\">\n");
                              out.write("                                                                ");
 } 
                              out.write("\n");
                              out.write("                                                            </td>\n");
                              out.write("                                                            <td align=\"left\" class=\"skn-background_alt\" height=\"25px\">\n");
                              out.write("                            <span class=\"skn-title2\" style=\"font-weight:normal;\">&nbsp;");
                              //  mvc:fragmentValue
                              org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag _jspx_th_mvc_005ffragmentValue_005f5 = (org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag) _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fnobody.get(org.jboss.dashboard.ui.taglib.formatter.FragmentValueTag.class);
                              boolean _jspx_th_mvc_005ffragmentValue_005f5_reused = false;
                              try {
                              _jspx_th_mvc_005ffragmentValue_005f5.setPageContext(_jspx_page_context);
                              _jspx_th_mvc_005ffragmentValue_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragmentValue_005f4);
                              // /configuration/show.noDOJO.jsp(94,87) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_mvc_005ffragmentValue_005f5.setName("description");
                              int _jspx_eval_mvc_005ffragmentValue_005f5 = _jspx_th_mvc_005ffragmentValue_005f5.doStartTag();
                              if (_jspx_th_mvc_005ffragmentValue_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                              }
                              _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fnobody.reuse(_jspx_th_mvc_005ffragmentValue_005f5);
                              _jspx_th_mvc_005ffragmentValue_005f5_reused = true;
                              } finally {
                              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005ffragmentValue_005f5, _jsp_getInstanceManager(), _jspx_th_mvc_005ffragmentValue_005f5_reused);
                              }
                              out.write("</span>\n");
                              out.write("                                                            </td>\n");
                              out.write("                                                        </tr>\n");
                              out.write("                                                        <tr>\n");
                              out.write("                                                            <td colspan=\"3\" class=\"skn-table_border\" style=\"border-bottom: none;\"></td>\n");
                              out.write("                                                        </tr>\n");
                              out.write("                                                    </table>\n");
                              out.write("                                                    <div style=\"overflow: auto;height:675px;\">\n");
                              out.write("                                                        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"90%\" align=\"center\" style=\"margin-top:15px;\">\n");
                              out.write("                                                            <tr>\n");
                              out.write("                                                                <td>\n");
                              out.write("                                                                    ");
if (editPage != null) {
                              out.write("\n");
                              out.write("                                                                    ");
                              org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (String)editPage, out, true);
                              out.write("\n");
                              out.write("                                                                    ");
}
                              out.write("\n");
                              out.write("\n");
                              out.write("                                                                </td>\n");
                              out.write("                                                            </tr>\n");
                              out.write("                                                        </table>\n");
                              out.write("                                                    </div>\n");
                              out.write("                                                ");
                              int evalDoAfterBody = _jspx_th_mvc_005ffragmentValue_005f4.doAfterBody();
                              name_Node = (java.lang.Object) _jspx_page_context.findAttribute("name_Node");
                              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                              break;
                              } while (true);
                              if (_jspx_eval_mvc_005ffragmentValue_005f4 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = _jspx_page_context.popBody();
                              }
                              }
                              if (_jspx_th_mvc_005ffragmentValue_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                              }
                              _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.reuse(_jspx_th_mvc_005ffragmentValue_005f4);
                              _jspx_th_mvc_005ffragmentValue_005f4_reused = true;
                              } finally {
                              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005ffragmentValue_005f4, _jsp_getInstanceManager(), _jspx_th_mvc_005ffragmentValue_005f4_reused);
                              }
                              out.write("\n");
                              out.write("                                            ");
                              int evalDoAfterBody = _jspx_th_mvc_005ffragmentValue_005f3.doAfterBody();
                              iconNodePath = (java.lang.Object) _jspx_page_context.findAttribute("iconNodePath");
                              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                              break;
                              } while (true);
                              if (_jspx_eval_mvc_005ffragmentValue_005f3 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = _jspx_page_context.popBody();
                              }
                              }
                              if (_jspx_th_mvc_005ffragmentValue_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                              }
                              _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.reuse(_jspx_th_mvc_005ffragmentValue_005f3);
                              _jspx_th_mvc_005ffragmentValue_005f3_reused = true;
                              } finally {
                              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005ffragmentValue_005f3, _jsp_getInstanceManager(), _jspx_th_mvc_005ffragmentValue_005f3_reused);
                              }
                              out.write("\n");
                              out.write("                                        ");
                              int evalDoAfterBody = _jspx_th_mvc_005ffragmentValue_005f2.doAfterBody();
                              icon_Node = (java.lang.Object) _jspx_page_context.findAttribute("icon_Node");
                              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                              break;
                              } while (true);
                              if (_jspx_eval_mvc_005ffragmentValue_005f2 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = _jspx_page_context.popBody();
                              }
                              }
                              if (_jspx_th_mvc_005ffragmentValue_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                              }
                              _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.reuse(_jspx_th_mvc_005ffragmentValue_005f2);
                              _jspx_th_mvc_005ffragmentValue_005f2_reused = true;
                              } finally {
                              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005ffragmentValue_005f2, _jsp_getInstanceManager(), _jspx_th_mvc_005ffragmentValue_005f2_reused);
                              }
                              out.write("\n");
                              out.write("                                    ");
                              int evalDoAfterBody = _jspx_th_mvc_005ffragmentValue_005f1.doAfterBody();
                              ajaxCompatible = (java.lang.Object) _jspx_page_context.findAttribute("ajaxCompatible");
                              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                              break;
                            } while (true);
                            if (_jspx_eval_mvc_005ffragmentValue_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                              out = _jspx_page_context.popBody();
                            }
                          }
                          if (_jspx_th_mvc_005ffragmentValue_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                            return;
                          }
                          _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.reuse(_jspx_th_mvc_005ffragmentValue_005f1);
                          _jspx_th_mvc_005ffragmentValue_005f1_reused = true;
                        } finally {
                          org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005ffragmentValue_005f1, _jsp_getInstanceManager(), _jspx_th_mvc_005ffragmentValue_005f1_reused);
                        }
                        out.write("\n");
                        out.write("                                ");
                        int evalDoAfterBody = _jspx_th_mvc_005ffragmentValue_005f0.doAfterBody();
                        editPage = (java.lang.Object) _jspx_page_context.findAttribute("editPage");
                        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                          break;
                      } while (true);
                      if (_jspx_eval_mvc_005ffragmentValue_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                        out = _jspx_page_context.popBody();
                      }
                    }
                    if (_jspx_th_mvc_005ffragmentValue_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                      return;
                    }
                    _005fjspx_005ftagPool_005fmvc_005ffragmentValue_0026_005fname_005fid.reuse(_jspx_th_mvc_005ffragmentValue_005f0);
                    _jspx_th_mvc_005ffragmentValue_005f0_reused = true;
                  } finally {
                    org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005ffragmentValue_005f0, _jsp_getInstanceManager(), _jspx_th_mvc_005ffragmentValue_005f0_reused);
                  }
                  out.write("\n");
                  out.write("\n");
                  out.write("                            </div>\n");
                  out.write("                        </td>\n");
                  out.write("                    </tr>\n");
                  out.write("                </table>\n");
                  out.write("\n");
                  out.write("            </td>\n");
                  out.write("        </tr>\n");
                  out.write("    </table>\n");
                  out.write("\n");
                  out.write("\n");
                  out.write("    <script type=\"text/javascript\" language=\"javascript\">\n");
                  out.write("\n");
                  out.write("\n");
                  out.write("        function createCookie(name, value_x, days) {\n");
                  out.write("\n");
                  out.write("            document.cookie = name +\"=\"+value_x;\n");
                  out.write("        }\n");
                  out.write("\n");
                  out.write("        function readCookie(name) {\n");
                  out.write("            var nameField = name + \"=\";\n");
                  out.write("            var c = document.cookie.split(';');\n");
                  out.write("\n");
                  out.write("            for(var i=0;i < c.length;i++) {\n");
                  out.write("                var aux2 = c[i];\n");
                  out.write("                while (aux2.charAt(0)==' ') aux2 = aux2.substring(1,aux2.length);\n");
                  out.write("                if (aux2.indexOf(nameField) == 0) {\n");
                  out.write("                    return aux2.substring(nameField.length,aux2.length);\n");
                  out.write("                }\n");
                  out.write("            }\n");
                  out.write("            return null;\n");
                  out.write("        }\n");
                  out.write("\n");
                  out.write("        function readPosition(divName) {\n");
                  out.write("\n");
                  out.write("            var cookie = readCookie(\"menu_position_\"+divName);\n");
                  out.write("            var valuex;\n");
                  out.write("            if(cookie == null){\n");
                  out.write("                valuex = \"400\";\n");
                  out.write("            } else {\n");
                  out.write("                valuex = cookie ? cookie : \"400\";\n");
                  out.write("            }\n");
                  out.write("            return valuex;\n");
                  out.write("\n");
                  out.write("        }\n");
                  out.write("\n");
                  out.write("        function storePosition(divName,value) {\n");
                  out.write("            createCookie(\"menu_position_\" + divName , value,1);\n");
                  out.write("        }\n");
                  out.write("\n");
                  out.write("        function DragCorner(container, handle, minsize) {\n");
                  out.write("            var container = $(container);\n");
                  out.write("            var handle = $(handle);\n");
                  out.write("\n");
                  out.write("            /* Add property to container to store position variables */\n");
                  out.write("            container.moveposition = {x:0, y:0};\n");
                  out.write("\n");
                  out.write("            function moveListener(event) {\n");
                  out.write("                /* Calculate how far the mouse moved */\n");
                  out.write("\n");
                  out.write("                var moved = {\n");
                  out.write("                    x:(event.pointerX() - container.moveposition.x),\n");
                  out.write("                    y:0\n");
                  out.write("                };\n");
                  out.write("                /* Reset container's x/y utility property */\n");
                  out.write("                container.moveposition = {x:event.pointerX(), y:0};\n");
                  out.write("                /* Border adds to dimensions */\n");
                  out.write("                var borderStyle = container.getStyle('border-width');\n");
                  out.write("                var borderSize = borderStyle.split(' ')[0].replace(/[^0-9]/g,'');\n");
                  out.write("                /* Padding adds to dimensions */\n");
                  out.write("                var paddingStyle = container.getStyle('padding');\n");
                  out.write("                var paddingSize = paddingStyle.split(' ')[0].replace(/[^0-9]/g,'');\n");
                  out.write("                /* Add things up that change dimensions */\n");
                  out.write("                var sizeAdjust = (borderSize*2) + (paddingSize*2);\n");
                  out.write("                /* Update container's size */\n");
                  out.write("                var size = container.getDimensions();\n");
                  out.write("                var a = size.width + moved.x-sizeAdjust;\n");
                  out.write("                if(size.width + moved.x-sizeAdjust > minsize){\n");
                  out.write("                    container.setStyle({\n");
                  out.write("                        //height: size.height+moved.y-sizeAdjust+'px',\n");
                  out.write("                        width:size.width+moved.x-sizeAdjust+'px'\n");
                  out.write("                    });\n");
                  out.write("                    storePosition('SomeDiv1',a);\n");
                  out.write("                    document.getElementById(\"myRow\").width=a;\n");
                  out.write("                }\n");
                  out.write("            }\n");
                  out.write("\n");
                  out.write("            /* Listen for 'mouse down' on handle to start the move listener */\n");
                  out.write("            handle.observe('mousedown', function(event) {\n");
                  out.write("                /* Set starting x/y */\n");
                  out.write("                container.moveposition = {x:event.pointerX(),y:0};\n");
                  out.write("                /* Start listening for mouse move on body */\n");
                  out.write("                Event.observe(document.body,'mousemove',moveListener);\n");
                  out.write("            });\n");
                  out.write("\n");
                  out.write("            /* Listen for 'mouse up' to cancel 'move' listener */\n");
                  out.write("            Event.observe(document.body,'mouseup', function(event) {\n");
                  out.write("                Event.stopObserving(document.body,'mousemove',moveListener);\n");
                  out.write("            });\n");
                  out.write("        }\n");
                  out.write("\n");
                  out.write("        var desp= readPosition('SomeDiv1');\n");
                  out.write("        DragCorner('SomeDiv1','DragHandleSomeDiv1',400);\n");
                  out.write("        document.getElementById(\"myRow\").width=desp;\n");
                  out.write("\n");
                  out.write("\n");
                  out.write("    </script><style type=\"text/css\">\n");
                  out.write("    div.corner {\n");
                  out.write("        background-color: #979797;\n");
                  out.write("        border-left: 1px solid #FFFFFF;\n");
                  out.write("        border-right: 1px solid #000000;\n");
                  out.write("        cursor: w-resize;\n");
                  out.write("        height: 700px;\n");
                  out.write("        position: relative;\n");
                  out.write("        width: 4px;\n");
                  out.write("    }\n");
                  out.write("</style>\n");
                  int evalDoAfterBody = _jspx_th_mvc_005ffragment_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_mvc_005ffragment_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_mvc_005ffragment_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fmvc_005ffragment_0026_005fname.reuse(_jspx_th_mvc_005ffragment_005f0);
              _jspx_th_mvc_005ffragment_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005ffragment_005f0, _jsp_getInstanceManager(), _jspx_th_mvc_005ffragment_005f0_reused);
            }
            out.write('\n');
            if (_jspx_meth_mvc_005ffragment_005f1(_jspx_th_mvc_005fformatter_005f0, _jspx_page_context))
              return;
            out.write('\n');
            int evalDoAfterBody = _jspx_th_mvc_005fformatter_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_mvc_005fformatter_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_mvc_005fformatter_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fmvc_005fformatter_0026_005fname.reuse(_jspx_th_mvc_005fformatter_005f0);
        _jspx_th_mvc_005fformatter_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005fformatter_005f0, _jsp_getInstanceManager(), _jspx_th_mvc_005fformatter_005f0_reused);
      }
      out.write('\n');
      out.write('\n');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_mvc_005fcontext_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mvc:context
    org.jboss.dashboard.ui.taglib.ContextTag _jspx_th_mvc_005fcontext_005f0 = (org.jboss.dashboard.ui.taglib.ContextTag) _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody.get(org.jboss.dashboard.ui.taglib.ContextTag.class);
    boolean _jspx_th_mvc_005fcontext_005f0_reused = false;
    try {
      _jspx_th_mvc_005fcontext_005f0.setPageContext(_jspx_page_context);
      _jspx_th_mvc_005fcontext_005f0.setParent(null);
      // /configuration/show.noDOJO.jsp(33,12) name = uri type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_mvc_005fcontext_005f0.setUri("/templates/css/administration_bar.css");
      int _jspx_eval_mvc_005fcontext_005f0 = _jspx_th_mvc_005fcontext_005f0.doStartTag();
      if (_jspx_th_mvc_005fcontext_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fmvc_005fcontext_0026_005furi_005fnobody.reuse(_jspx_th_mvc_005fcontext_005f0);
      _jspx_th_mvc_005fcontext_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005fcontext_005f0, _jsp_getInstanceManager(), _jspx_th_mvc_005fcontext_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_i18n_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_mvc_005ffragment_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  i18n:message
    org.jboss.dashboard.ui.taglib.MessageTag _jspx_th_i18n_005fmessage_005f0 = (org.jboss.dashboard.ui.taglib.MessageTag) _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey_005fnobody.get(org.jboss.dashboard.ui.taglib.MessageTag.class);
    boolean _jspx_th_i18n_005fmessage_005f0_reused = false;
    try {
      _jspx_th_i18n_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_i18n_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragment_005f0);
      // /configuration/show.noDOJO.jsp(42,43) name = key type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_i18n_005fmessage_005f0.setKey("ui.envelope.backToWorkspace");
      int _jspx_eval_i18n_005fmessage_005f0 = _jspx_th_i18n_005fmessage_005f0.doStartTag();
      if (_jspx_th_i18n_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fi18n_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_i18n_005fmessage_005f0);
      _jspx_th_i18n_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_i18n_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_i18n_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_static_005fimage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_mvc_005ffragment_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  static:image
    org.jboss.dashboard.ui.taglib.resource.ImageResolverTag _jspx_th_static_005fimage_005f0 = (org.jboss.dashboard.ui.taglib.resource.ImageResolverTag) _005fjspx_005ftagPool_005fstatic_005fimage_0026_005frelativePath_005fnobody.get(org.jboss.dashboard.ui.taglib.resource.ImageResolverTag.class);
    boolean _jspx_th_static_005fimage_005f0_reused = false;
    try {
      _jspx_th_static_005fimage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_static_005fimage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragment_005f0);
      // /configuration/show.noDOJO.jsp(43,30) name = relativePath type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_static_005fimage_005f0.setRelativePath("general/workspace_button.png");
      int _jspx_eval_static_005fimage_005f0 = _jspx_th_static_005fimage_005f0.doStartTag();
      if (_jspx_th_static_005fimage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fstatic_005fimage_0026_005frelativePath_005fnobody.reuse(_jspx_th_static_005fimage_005f0);
      _jspx_th_static_005fimage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_static_005fimage_005f0, _jsp_getInstanceManager(), _jspx_th_static_005fimage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_static_005fimage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_mvc_005ffragmentValue_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  static:image
    org.jboss.dashboard.ui.taglib.resource.ImageResolverTag _jspx_th_static_005fimage_005f1 = (org.jboss.dashboard.ui.taglib.resource.ImageResolverTag) _005fjspx_005ftagPool_005fstatic_005fimage_0026_005frelativePath_005fnobody.get(org.jboss.dashboard.ui.taglib.resource.ImageResolverTag.class);
    boolean _jspx_th_static_005fimage_005f1_reused = false;
    try {
      _jspx_th_static_005fimage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_static_005fimage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005ffragmentValue_005f4);
      // /configuration/show.noDOJO.jsp(87,74) name = relativePath type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_static_005fimage_005f1.setRelativePath("general/spacer.png");
      int _jspx_eval_static_005fimage_005f1 = _jspx_th_static_005fimage_005f1.doStartTag();
      if (_jspx_th_static_005fimage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fstatic_005fimage_0026_005frelativePath_005fnobody.reuse(_jspx_th_static_005fimage_005f1);
      _jspx_th_static_005fimage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_static_005fimage_005f1, _jsp_getInstanceManager(), _jspx_th_static_005fimage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_mvc_005ffragment_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_mvc_005fformatter_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest)_jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse)_jspx_page_context.getResponse();
    //  mvc:fragment
    org.jboss.dashboard.ui.taglib.formatter.FragmentTag _jspx_th_mvc_005ffragment_005f1 = (org.jboss.dashboard.ui.taglib.formatter.FragmentTag) _005fjspx_005ftagPool_005fmvc_005ffragment_0026_005fname.get(org.jboss.dashboard.ui.taglib.formatter.FragmentTag.class);
    boolean _jspx_th_mvc_005ffragment_005f1_reused = false;
    try {
      _jspx_th_mvc_005ffragment_005f1.setPageContext(_jspx_page_context);
      _jspx_th_mvc_005ffragment_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_mvc_005fformatter_005f0);
      // /configuration/show.noDOJO.jsp(238,0) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_mvc_005ffragment_005f1.setName("accessDenied");
      int _jspx_eval_mvc_005ffragment_005f1 = _jspx_th_mvc_005ffragment_005f1.doStartTag();
      if (_jspx_eval_mvc_005ffragment_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_mvc_005ffragment_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_mvc_005ffragment_005f1);
        }
        do {
          out.write("\n");
          out.write("    ");
          org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../login.jsp", out, false);
          out.write('\n');
          int evalDoAfterBody = _jspx_th_mvc_005ffragment_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_mvc_005ffragment_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_mvc_005ffragment_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fmvc_005ffragment_0026_005fname.reuse(_jspx_th_mvc_005ffragment_005f1);
      _jspx_th_mvc_005ffragment_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_mvc_005ffragment_005f1, _jsp_getInstanceManager(), _jspx_th_mvc_005ffragment_005f1_reused);
    }
    return false;
  }
}
