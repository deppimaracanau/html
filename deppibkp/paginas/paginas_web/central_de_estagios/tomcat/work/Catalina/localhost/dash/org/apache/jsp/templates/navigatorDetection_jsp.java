/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.79
 * Generated at: 2017-10-09 00:03:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.templates;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class navigatorDetection_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("var IE = false;\n");
      out.write("var IE10 = false;\n");
      out.write("var NS = false;\n");
      out.write("var FX = false;\n");
      out.write("var OP = false;\n");
      out.write("var CH = false;\n");
      out.write("var DHTML_support = false;\n");
      out.write("var navigatorVersion = 0;\n");
      out.write("checkBrowser();\n");
      out.write("\n");
      out.write("function checkIEversion(v) {\n");
      out.write("    var r = RegExp('msie' + (!isNaN(v) ? ('\\\\s' + v) : ''), 'i');\n");
      out.write("    return r.test(navigator.userAgent);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function checkBrowser() {\n");
      out.write("    var userAgent = navigator.userAgent;\n");
      out.write("    if (userAgent.indexOf('Netscape') != -1) {\n");
      out.write("        navigatorVersion = parseFloat(userAgent.substring(userAgent.indexOf('Netscape') + 9, userAgent.length));\n");
      out.write("        NS = true;\n");
      out.write("    } else if (checkIEversion(10)) {\n");
      out.write("        IE10 = true;\n");
      out.write("        IE = true;\n");
      out.write("    }\n");
      out.write("    else if (userAgent.indexOf('MSIE') != -1) {\n");
      out.write("        navigatorVersion = parseFloat(userAgent.substring(userAgent.indexOf('MSIE') + 4, userAgent.length));\n");
      out.write("        IE = true;\n");
      out.write("        DHTML_support = navigatorVersion >= 5;\n");
      out.write("    }\n");
      out.write("    else if (userAgent.indexOf('Firefox') != -1) {\n");
      out.write("        navigatorVersion = parseFloat(userAgent.substring(userAgent.indexOf('Firefox') + 1, userAgent.length));\n");
      out.write("        FX = true;\n");
      out.write("    }\n");
      out.write("    else if (userAgent.indexOf('Opera') != -1) {\n");
      out.write("        navigatorVersion = parseFloat(userAgent.substring(userAgent.indexOf('Opera') + 1, userAgent.length));\n");
      out.write("        OP = true;\n");
      out.write("    }\n");
      out.write("    else if (userAgent.indexOf('Chrome') != -1) {\n");
      out.write("        var startPos = userAgent.indexOf('Chrome') + 1;\n");
      out.write("        var endPos = userAgent.indexOf(\" \", startPos);\n");
      out.write("        navigatorVersion = parseFloat(userAgent.substring(startPos, endPos));\n");
      out.write("        \n");
      out.write("        CH = true;\n");
      out.write("    }\n");
      out.write("};\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
